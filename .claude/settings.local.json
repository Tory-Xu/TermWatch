{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(./install.sh)",
      "Bash(source:*)",
      "Bash(notify_success \"TermWatch 安装测试通知\")",
      "Bash(bash:*)",
      "Bash(notify_success \"便捷函数测试 - 成功通知\")",
      "Bash(ping:*)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(env)",
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(git add:*)",
      "Bash(gh repo create:*)",
      "Bash(brew install:*)",
      "Bash(gh auth:*)",
      "Bash(git config:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "mcp__graphiti-memory__search_memory_nodes",
      "Bash(alias termwatch='bash /Users/xuxuxu/.termwatch/termwatch.sh')",
      "Bash(# 临时重命名 TermWatch 以测试优雅降级\nmv ~/.termwatch ~/.termwatch_backup 2>/dev/null || true\n\n# 测试钩子脚本在没有 TermWatch 时的行为\necho ''{\"\"session_id\"\": \"\"test\"\"}'' | bash /Users/xuxuxu/.claude/hooks/stop.sh 2>&1\necho \"\"Exit code: $?\"\"\n\n# 恢复 TermWatch\nmv ~/.termwatch_backup ~/.termwatch 2>/dev/null || true)",
      "Bash(# 提取并测试 notify.sh 模板\nsed -n ''/cat > ~\\/.claude\\/hooks\\/notify\\.sh/,/^EOF$/p'' /Users/xuxuxu/Documents/MyGitHub/TermWatch/scripts/install-claude-integration.sh | grep -A 20 \"\"# 发送通知到 TermWatch\"\")",
      "Bash(# 创建测试环境\nmkdir -p /tmp/test_claude_hooks/termwatch\n\n# 模拟现有的钩子文件\ncat > /tmp/test_claude_hooks/notify.sh << ''EOF''\n#!/bin/bash\necho \"\"Old notify hook\"\"\nEOF\n\ncat > /tmp/test_claude_hooks/stop.sh << ''EOF''\n#!/bin/bash\necho \"\"Old stop hook\"\"\nEOF\n\n# 测试迁移逻辑\ncd /tmp && HOME=/tmp bash -c ''\nlog_info() { echo \"\"[INFO] $1\"\"; }\nlog_success() { echo \"\"[SUCCESS] $1\"\"; }\nlog_warning() { echo \"\"[WARNING] $1\"\"; }\n\n# 迁移现有钩子到新目录\nmigrate_existing_hooks() {\n    log_info \"\"检查并迁移现有钩子...\"\"\n    \n    local old_notify=\"\"$HOME/.claude/hooks/notify.sh\"\"\n    local old_stop=\"\"$HOME/.claude/hooks/stop.sh\"\"\n    local old_readme=\"\"$HOME/.claude/hooks/README.md\"\"\n    \n    local new_notify=\"\"$HOME/.claude/hooks/termwatch/notify.sh\"\"\n    local new_stop=\"\"$HOME/.claude/hooks/termwatch/stop.sh\"\"\n    local new_readme=\"\"$HOME/.claude/hooks/termwatch/README.md\"\"\n    \n    local migrated=false\n    \n    # 创建目标目录\n    mkdir -p \"\"$HOME/.claude/hooks/termwatch\"\"\n    \n    # 迁移 notify.sh\n    if [[ -f \"\"$old_notify\"\" ]] && [[ ! -f \"\"$new_notify\"\" ]]; then\n        log_info \"\"迁移现有通知钩子...\"\"\n        mv \"\"$old_notify\"\" \"\"$new_notify\"\" 2>/dev/null || cp \"\"$old_notify\"\" \"\"$new_notify\"\"\n        migrated=true\n    fi\n    \n    # 迁移 stop.sh\n    if [[ -f \"\"$old_stop\"\" ]] && [[ ! -f \"\"$new_stop\"\" ]]; then\n        log_info \"\"迁移现有停止钩子...\"\"\n        mv \"\"$old_stop\"\" \"\"$new_stop\"\" 2>/dev/null || cp \"\"$old_stop\"\" \"\"$new_stop\"\"\n        migrated=true\n    fi\n    \n    # 迁移 README.md\n    if [[ -f \"\"$old_readme\"\" ]] && [[ ! -f \"\"$new_readme\"\" ]]; then\n        log_info \"\"迁移现有说明文档...\"\"\n        mv \"\"$old_readme\"\" \"\"$new_readme\"\" 2>/dev/null || cp \"\"$old_readme\"\" \"\"$new_readme\"\"\n        migrated=true\n    fi\n    \n    if [[ \"\"$migrated\"\" == \"\"true\"\" ]]; then\n        log_success \"\"现有钩子已迁移到 ~/.claude/hooks/termwatch/\"\"\n        log_warning \"\"请重启 Claude Code 以使新的钩子路径生效\"\"\n    else\n        log_info \"\"无现有钩子需要迁移\"\"\n    fi\n}\n\n# 设置测试环境\nmkdir -p .claude/hooks\ncp test_claude_hooks/notify.sh .claude/hooks/\ncp test_claude_hooks/stop.sh .claude/hooks/\n\necho \"\"=== 迁移前 ===\"\"\nls -la .claude/hooks/\n\n# 执行迁移\nmigrate_existing_hooks\n\necho \"\"\"\"\necho \"\"=== 迁移后 ===\"\"\necho \"\"原目录:\"\"\nls -la .claude/hooks/ 2>/dev/null || echo \"\"  (空)\"\"\necho \"\"新目录:\"\"\nls -la .claude/hooks/termwatch/ 2>/dev/null || echo \"\"  (不存在)\"\"\n''\n\n# 清理测试环境\nrm -rf /tmp/test_claude_hooks)",
      "Bash(# 简单测试新目录结构\nmkdir -p /tmp/test_hooks_dir/.claude/hooks/termwatch\n\necho \"\"#!/bin/bash\"\" > /tmp/test_hooks_dir/.claude/hooks/termwatch/notify.sh\necho \"\"#!/bin/bash\"\" > /tmp/test_hooks_dir/.claude/hooks/termwatch/stop.sh\necho \"\"# README\"\" > /tmp/test_hooks_dir/.claude/hooks/termwatch/README.md\n\nchmod +x /tmp/test_hooks_dir/.claude/hooks/termwatch/*.sh\n\necho \"\"=== 新目录结构测试 ===\"\"\nls -la /tmp/test_hooks_dir/.claude/hooks/termwatch/\n\necho \"\"\"\"\necho \"\"=== 钩子脚本权限检查 ===\"\"\nls -l /tmp/test_hooks_dir/.claude/hooks/termwatch/*.sh\n\n# 清理\nrm -rf /tmp/test_hooks_dir)",
      "Bash(# 提取并查看生成的钩子内容\necho \"\"=== 通知钩子模板内容 ===\"\"\nsed -n ''/cat > ~\\/.claude\\/hooks\\/termwatch\\/notify\\.sh/,/^EOF$/p'' /Users/xuxuxu/Documents/MyGitHub/TermWatch/scripts/install-claude-integration.sh | head -10 | tail -5\n\necho \"\"\"\"\necho \"\"=== 任务完成钩子模板内容 ===\"\"\nsed -n ''/cat > ~\\/.claude\\/hooks\\/termwatch\\/stop\\.sh/,/^EOF$/p'' /Users/xuxuxu/Documents/MyGitHub/TermWatch/scripts/install-claude-integration.sh | head -10 | tail -5)",
      "WebFetch(domain:uxwing.com)",
      "WebFetch(domain:brandfetch.com)"
    ],
    "deny": []
  }
}
# TermWatch Auto-Notify Extension 配置文件

# 是否启用自动通知
ENABLE_AUTO_NOTIFY=true

# 通知阈值（秒）- 只有执行时间超过此值的命令才会通知
AUTO_NOTIFY_THRESHOLD=30

# 忽略的命令列表（不会触发通知）
IGNORE_COMMANDS=("cd" "ls" "pwd" "echo" "cat" "less" "more" "vi" "vim" "nano" "man" "help" "history" "clear" "exit" "which" "whereis" "whoami" "date" "uptime" "ps" "top" "htop" "kill" "killall")

# 重要命令列表（无论执行时间都会通知）
IMPORTANT_COMMANDS=("make" "npm" "yarn" "pnpm" "cargo" "docker" "kubectl" "git push" "git pull" "git clone" "pytest" "jest" "gradle" "mvn" "bundle" "pip install" "composer install" "brew install" "apt install" "yum install" "go build" "go test" "cargo build" "cargo test")

# 强制通知的命令前缀（以 ! 开头的命令总是通知）
FORCE_NOTIFY_PREFIX="!"

# 高级配置

# 是否在重要命令执行时立即发送开始通知
NOTIFY_IMPORTANT_START=false

# 是否显示命令执行的详细信息（参数等）
SHOW_COMMAND_DETAILS=true

# 命令截断长度（超过此长度的命令会被截断显示）
COMMAND_TRUNCATE_LENGTH=50

# 是否启用命令执行时间统计
ENABLE_TIME_TRACKING=true

# 是否在通知中包含当前目录信息
INCLUDE_WORKING_DIR=false

# 自定义通知模板（可以使用变量 {command}, {duration}, {exit_code}, {dir}）
CUSTOM_SUCCESS_TEMPLATE="✅ 命令执行成功\n命令: {command}\n耗时: {duration}"
CUSTOM_ERROR_TEMPLATE="❌ 命令执行失败\n命令: {command}\n耗时: {duration}\n退出码: {exit_code}"

# 命令分类配置（可以为不同类型的命令设置不同的通知策略）

# 构建类命令（较低阈值，因为用户通常会等待）
BUILD_COMMANDS=("make" "npm run build" "yarn build" "cargo build" "go build" "gradle build" "mvn compile")
BUILD_THRESHOLD=15

# 测试类命令
TEST_COMMANDS=("npm test" "yarn test" "pytest" "jest" "cargo test" "go test" "mvn test")
TEST_THRESHOLD=10

# 安装类命令（较高阈值，因为通常需要很长时间）
INSTALL_COMMANDS=("npm install" "yarn install" "pip install" "brew install" "apt install")
INSTALL_THRESHOLD=60

# 部署类命令（总是通知，无论时间）
DEPLOY_COMMANDS=("docker push" "kubectl apply" "terraform apply" "ansible-playbook")
DEPLOY_THRESHOLD=0